{
	"info": {
		"_postman_id": "d4724891-0514-48a0-b8c0-f060dc41763e",
		"name": "Open Food Facts open-prices REST API",
		"description": "Open Prices API allows you to add product prices\n\nContact Support:\n Name: The Open Food Facts team\n Email: contact@openfoodfacts.org",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32844729"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "schema",
					"item": [
						{
							"name": "api schema retrieve",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "opsession",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.oai.openapi"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/schema?format=json&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"schema"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										},
										{
											"key": "lang",
											"value": "en"
										}
									]
								},
								"description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json"
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.oai.openapi"
											},
											{
												"key": "opsession",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/schema?format=json&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"schema"
											],
											"query": [
												{
													"key": "format",
													"value": "json"
												},
												{
													"key": "lang",
													"value": "en"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"est_ce6\": {},\n  \"est_a\": {},\n  \"dolor_5\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "v1",
					"item": [
						{
							"name": "auth",
							"item": [
								{
									"name": "auth create",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "opsession",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth"
											]
										},
										"description": "Authentication: provide username/password\nand get a bearer token in return.\n\n- **username**: Open Food Facts user_id (not email)\n- **password**: user password (clear text, but HTTPS encrypted)\n\nA **token** is returned. If the **set_cookie** parameter is set to 1,\nthe token is also set as a cookie named \"session\" in the response.\n\nTo authenticate, you can either:\n- use the **Authorization** header with the **Bearer** scheme,\ne.g.: \"Authorization: bearer token\"\n- use the **session** cookie, e.g.: \"Cookie: session=token\""
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "opsession",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "locations",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "locations retrieve",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "opsession",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Location."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "opsession",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"osm_id\": \"<long>\",\n  \"osm_type\": \"RELATION\",\n  \"type\": \"ONLINE\",\n  \"updated\": \"<dateTime>\",\n  \"osm_name\": \"<string>\",\n  \"osm_display_name\": \"<string>\",\n  \"osm_tag_key\": \"<string>\",\n  \"osm_tag_value\": \"<string>\",\n  \"osm_brand\": \"<string>\",\n  \"osm_address_postcode\": \"<string>\",\n  \"osm_address_city\": \"<string>\",\n  \"osm_address_country\": \"<string>\",\n  \"osm_address_country_code\": \"<string>\",\n  \"osm_lat\": \"<double>\",\n  \"osm_lon\": \"<double>\",\n  \"osm_version\": \"<integer>\",\n  \"website_url\": \"<uri>\",\n  \"price_count\": \"<integer>\",\n  \"user_count\": \"<integer>\",\n  \"product_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "osm",
									"item": [
										{
											"name": "{osm_type}",
											"item": [
												{
													"name": "{osm_id}",
													"item": [
														{
															"name": "locations osm retrieve",
															"request": {
																"auth": {
																	"type": "apikey",
																	"apikey": [
																		{
																			"key": "key",
																			"value": "opsession",
																			"type": "string"
																		},
																		{
																			"key": "value",
																			"value": "{{apiKey}}",
																			"type": "string"
																		},
																		{
																			"key": "in",
																			"value": "header",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/locations/osm/:osm_type/:osm_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"locations",
																		"osm",
																		":osm_type",
																		":osm_id"
																	],
																	"variable": [
																		{
																			"key": "osm_type",
																			"value": "_UQDOCfZ5s",
																			"description": "(Required) "
																		},
																		{
																			"key": "osm_id",
																			"value": "03",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "opsession",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/locations/osm/:osm_type/:osm_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"locations",
																				"osm",
																				":osm_type",
																				":osm_id"
																			],
																			"variable": [
																				{
																					"key": "osm_type"
																				},
																				{
																					"key": "osm_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<integer>\",\n  \"osm_id\": \"<long>\",\n  \"osm_type\": \"RELATION\",\n  \"type\": \"ONLINE\",\n  \"updated\": \"<dateTime>\",\n  \"osm_name\": \"<string>\",\n  \"osm_display_name\": \"<string>\",\n  \"osm_tag_key\": \"<string>\",\n  \"osm_tag_value\": \"<string>\",\n  \"osm_brand\": \"<string>\",\n  \"osm_address_postcode\": \"<string>\",\n  \"osm_address_city\": \"<string>\",\n  \"osm_address_country\": \"<string>\",\n  \"osm_address_country_code\": \"<string>\",\n  \"osm_lat\": \"<double>\",\n  \"osm_lon\": \"<double>\",\n  \"osm_version\": \"<integer>\",\n  \"website_url\": \"<uri>\",\n  \"price_count\": \"<integer>\",\n  \"user_count\": \"<integer>\",\n  \"product_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "locations list",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "opsession",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/locations?order_by=<string>&osm_address_city__like=<string>&osm_address_country__like=<string>&osm_name__like=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&size=<integer>&type=OSM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"locations"
											],
											"query": [
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "osm_address_city__like",
													"value": "<string>"
												},
												{
													"key": "osm_address_country__like",
													"value": "<string>"
												},
												{
													"key": "osm_name__like",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "price_count",
													"value": "<integer>"
												},
												{
													"key": "price_count__gte",
													"value": "<integer>"
												},
												{
													"key": "price_count__lte",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												},
												{
													"key": "type",
													"value": "OSM",
													"description": "* `OSM` - OSM\n* `ONLINE` - ONLINE"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "opsession",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/locations?order_by=<string>&osm_address_city__like=<string>&osm_address_country__like=<string>&osm_name__like=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&size=<integer>&type=OSM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"locations"
													],
													"query": [
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "osm_address_city__like",
															"value": "<string>"
														},
														{
															"key": "osm_address_country__like",
															"value": "<string>"
														},
														{
															"key": "osm_name__like",
															"value": "<string>"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "price_count",
															"value": "<integer>"
														},
														{
															"key": "price_count__gte",
															"value": "<integer>"
														},
														{
															"key": "price_count__lte",
															"value": "<integer>"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														},
														{
															"key": "type",
															"value": "OSM",
															"description": "* `OSM` - OSM\n* `ONLINE` - ONLINE"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"id\": \"<integer>\",\n      \"osm_id\": \"<long>\",\n      \"osm_type\": \"NODE\",\n      \"type\": \"ONLINE\",\n      \"updated\": \"<dateTime>\",\n      \"osm_name\": \"<string>\",\n      \"osm_display_name\": \"<string>\",\n      \"osm_tag_key\": \"<string>\",\n      \"osm_tag_value\": \"<string>\",\n      \"osm_brand\": \"<string>\",\n      \"osm_address_postcode\": \"<string>\",\n      \"osm_address_city\": \"<string>\",\n      \"osm_address_country\": \"<string>\",\n      \"osm_address_country_code\": \"<string>\",\n      \"osm_lat\": \"<double>\",\n      \"osm_lon\": \"<double>\",\n      \"osm_version\": \"<integer>\",\n      \"website_url\": \"<uri>\",\n      \"price_count\": \"<integer>\",\n      \"user_count\": \"<integer>\",\n      \"product_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"osm_id\": \"<long>\",\n      \"osm_type\": \"NODE\",\n      \"type\": \"OSM\",\n      \"updated\": \"<dateTime>\",\n      \"osm_name\": \"<string>\",\n      \"osm_display_name\": \"<string>\",\n      \"osm_tag_key\": \"<string>\",\n      \"osm_tag_value\": \"<string>\",\n      \"osm_brand\": \"<string>\",\n      \"osm_address_postcode\": \"<string>\",\n      \"osm_address_city\": \"<string>\",\n      \"osm_address_country\": \"<string>\",\n      \"osm_address_country_code\": \"<string>\",\n      \"osm_lat\": \"<double>\",\n      \"osm_lon\": \"<double>\",\n      \"osm_version\": \"<integer>\",\n      \"website_url\": \"<uri>\",\n      \"price_count\": \"<integer>\",\n      \"user_count\": \"<integer>\",\n      \"product_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "locations create",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "opsession",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"OSM\",\n  \"osm_id\": \"<long>\",\n  \"osm_type\": \"WAY\",\n  \"website_url\": \"<uri>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"locations"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "opsession",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"OSM\",\n  \"osm_id\": \"<long>\",\n  \"osm_type\": \"WAY\",\n  \"website_url\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"locations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"OSM\",\n  \"osm_id\": \"<long>\",\n  \"osm_type\": \"WAY\",\n  \"website_url\": \"<uri>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "price-tags",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "price tags retrieve",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/price-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"price-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price Tag."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/price-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"price-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"id\": \"<integer>\",\n  \"predictions\": [\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"PRICE_TAG_EXTRACTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n      }\n    },\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"PRICE_TAG_EXTRACTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n      }\n    }\n  ],\n  \"price_id\": \"<integer>\",\n  \"proof\": {\n    \"id\": \"<integer>\",\n    \"location\": {\n      \"id\": \"<integer>\",\n      \"osm_id\": \"<long>\",\n      \"osm_type\": \"WAY\",\n      \"type\": \"ONLINE\",\n      \"updated\": \"<dateTime>\",\n      \"osm_name\": \"<string>\",\n      \"osm_display_name\": \"<string>\",\n      \"osm_tag_key\": \"<string>\",\n      \"osm_tag_value\": \"<string>\",\n      \"osm_brand\": \"<string>\",\n      \"osm_address_postcode\": \"<string>\",\n      \"osm_address_city\": \"<string>\",\n      \"osm_address_country\": \"<string>\",\n      \"osm_address_country_code\": \"<string>\",\n      \"osm_lat\": \"<double>\",\n      \"osm_lon\": \"<double>\",\n      \"osm_version\": \"<integer>\",\n      \"website_url\": \"<uri>\",\n      \"price_count\": \"<integer>\",\n      \"user_count\": \"<integer>\",\n      \"product_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    },\n    \"location_id\": \"<integer>\",\n    \"type\": \"SHOP_IMPORT\",\n    \"updated\": \"<dateTime>\",\n    \"file_path\": \"<string>\",\n    \"mimetype\": \"<string>\",\n    \"image_thumb_path\": \"<string>\",\n    \"location_osm_id\": \"<long>\",\n    \"location_osm_type\": \"WAY\",\n    \"date\": \"<date>\",\n    \"currency\": \"VNN\",\n    \"receipt_price_count\": \"<integer>\",\n    \"receipt_price_total\": \"<double>\",\n    \"receipt_online_delivery_costs\": \"<double>\",\n    \"ready_for_price_tag_validation\": \"<boolean>\",\n    \"price_count\": \"<integer>\",\n    \"prediction_count\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"updated\": \"<dateTime>\",\n  \"status\": 0,\n  \"model_version\": \"<string>\",\n  \"prediction_count\": \"<integer>\",\n  \"created_by\": \"<string>\",\n  \"updated_by\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "price tags partial update",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"status\": 4,\n  \"price_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/price-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"price-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price Tag."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"status\": 4,\n  \"price_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/price-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"price-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"price_id\": \"<integer>\",\n  \"status\": 0\n}"
												}
											]
										},
										{
											"name": "price tags destroy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/price-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"price-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price Tag."
														}
													]
												}
											},
											"response": [
												{
													"name": "No response body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/price-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"price-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "price tags list",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/price-tags?created__gte=<dateTime>&created__lte=<dateTime>&order_by=<string>&page=<integer>&prediction_count=<integer>&prediction_count__gte=<integer>&prediction_count__lte=<number>&proof__owner=<string>&proof__ready_for_price_tag_validation=<boolean>&proof_id=<integer>&size=<integer>&status=0&status__isnull=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"price-tags"
											],
											"query": [
												{
													"key": "created__gte",
													"value": "<dateTime>"
												},
												{
													"key": "created__lte",
													"value": "<dateTime>"
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "prediction_count",
													"value": "<integer>"
												},
												{
													"key": "prediction_count__gte",
													"value": "<integer>"
												},
												{
													"key": "prediction_count__lte",
													"value": "<number>"
												},
												{
													"key": "proof__owner",
													"value": "<string>"
												},
												{
													"key": "proof__ready_for_price_tag_validation",
													"value": "<boolean>"
												},
												{
													"key": "proof_id",
													"value": "<integer>",
													"description": "The proof this price tag belongs to"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												},
												{
													"key": "status",
													"value": "0",
													"description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag"
												},
												{
													"key": "status__isnull",
													"value": "<boolean>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/price-tags?created__gte=<dateTime>&created__lte=<dateTime>&order_by=<string>&page=<integer>&prediction_count=<integer>&prediction_count__gte=<integer>&prediction_count__lte=<number>&proof__owner=<string>&proof__ready_for_price_tag_validation=<boolean>&proof_id=<integer>&size=<integer>&status=0&status__isnull=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"price-tags"
													],
													"query": [
														{
															"key": "created__gte",
															"value": "<dateTime>"
														},
														{
															"key": "created__lte",
															"value": "<dateTime>"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "prediction_count",
															"value": "<integer>"
														},
														{
															"key": "prediction_count__gte",
															"value": "<integer>"
														},
														{
															"key": "prediction_count__lte",
															"value": "<number>"
														},
														{
															"key": "proof__owner",
															"value": "<string>"
														},
														{
															"key": "proof__ready_for_price_tag_validation",
															"value": "<boolean>"
														},
														{
															"key": "proof_id",
															"value": "<integer>",
															"description": "The proof this price tag belongs to"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														},
														{
															"key": "status",
															"value": "0",
															"description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag"
														},
														{
															"key": "status__isnull",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"bounding_box\": [\n        \"<double>\",\n        \"<double>\"\n      ],\n      \"id\": \"<integer>\",\n      \"predictions\": [\n        {\n          \"model_name\": \"<string>\",\n          \"model_version\": \"<string>\",\n          \"type\": \"PRICE_TAG_EXTRACTION\",\n          \"created\": \"<dateTime>\",\n          \"data\": {\n            \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n          }\n        },\n        {\n          \"model_name\": \"<string>\",\n          \"model_version\": \"<string>\",\n          \"type\": \"PRICE_TAG_EXTRACTION\",\n          \"created\": \"<dateTime>\",\n          \"data\": {\n            \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n          }\n        }\n      ],\n      \"price_id\": \"<integer>\",\n      \"proof\": {\n        \"id\": \"<integer>\",\n        \"location\": {\n          \"id\": \"<integer>\",\n          \"osm_id\": \"<long>\",\n          \"osm_type\": \"RELATION\",\n          \"type\": \"ONLINE\",\n          \"updated\": \"<dateTime>\",\n          \"osm_name\": \"<string>\",\n          \"osm_display_name\": \"<string>\",\n          \"osm_tag_key\": \"<string>\",\n          \"osm_tag_value\": \"<string>\",\n          \"osm_brand\": \"<string>\",\n          \"osm_address_postcode\": \"<string>\",\n          \"osm_address_city\": \"<string>\",\n          \"osm_address_country\": \"<string>\",\n          \"osm_address_country_code\": \"<string>\",\n          \"osm_lat\": \"<double>\",\n          \"osm_lon\": \"<double>\",\n          \"osm_version\": \"<integer>\",\n          \"website_url\": \"<uri>\",\n          \"price_count\": \"<integer>\",\n          \"user_count\": \"<integer>\",\n          \"product_count\": \"<integer>\",\n          \"proof_count\": \"<integer>\",\n          \"source\": \"<string>\",\n          \"created\": \"<dateTime>\"\n        },\n        \"location_id\": \"<integer>\",\n        \"type\": \"SHOP_IMPORT\",\n        \"updated\": \"<dateTime>\",\n        \"file_path\": \"<string>\",\n        \"mimetype\": \"<string>\",\n        \"image_thumb_path\": \"<string>\",\n        \"location_osm_id\": \"<long>\",\n        \"location_osm_type\": \"WAY\",\n        \"date\": \"<date>\",\n        \"currency\": \"PTE\",\n        \"receipt_price_count\": \"<integer>\",\n        \"receipt_price_total\": \"<double>\",\n        \"receipt_online_delivery_costs\": \"<double>\",\n        \"ready_for_price_tag_validation\": \"<boolean>\",\n        \"price_count\": \"<integer>\",\n        \"prediction_count\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"updated\": \"<dateTime>\",\n      \"status\": 0,\n      \"model_version\": \"<string>\",\n      \"prediction_count\": \"<integer>\",\n      \"created_by\": \"<string>\",\n      \"updated_by\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    },\n    {\n      \"bounding_box\": [\n        \"<double>\",\n        \"<double>\"\n      ],\n      \"id\": \"<integer>\",\n      \"predictions\": [\n        {\n          \"model_name\": \"<string>\",\n          \"model_version\": \"<string>\",\n          \"type\": \"PRICE_TAG_EXTRACTION\",\n          \"created\": \"<dateTime>\",\n          \"data\": {\n            \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n          }\n        },\n        {\n          \"model_name\": \"<string>\",\n          \"model_version\": \"<string>\",\n          \"type\": \"PRICE_TAG_EXTRACTION\",\n          \"created\": \"<dateTime>\",\n          \"data\": {\n            \"description\": \"a dict representing the data of the prediction. This field is model-specific.\"\n          }\n        }\n      ],\n      \"price_id\": \"<integer>\",\n      \"proof\": {\n        \"id\": \"<integer>\",\n        \"location\": {\n          \"id\": \"<integer>\",\n          \"osm_id\": \"<long>\",\n          \"osm_type\": \"NODE\",\n          \"type\": \"ONLINE\",\n          \"updated\": \"<dateTime>\",\n          \"osm_name\": \"<string>\",\n          \"osm_display_name\": \"<string>\",\n          \"osm_tag_key\": \"<string>\",\n          \"osm_tag_value\": \"<string>\",\n          \"osm_brand\": \"<string>\",\n          \"osm_address_postcode\": \"<string>\",\n          \"osm_address_city\": \"<string>\",\n          \"osm_address_country\": \"<string>\",\n          \"osm_address_country_code\": \"<string>\",\n          \"osm_lat\": \"<double>\",\n          \"osm_lon\": \"<double>\",\n          \"osm_version\": \"<integer>\",\n          \"website_url\": \"<uri>\",\n          \"price_count\": \"<integer>\",\n          \"user_count\": \"<integer>\",\n          \"product_count\": \"<integer>\",\n          \"proof_count\": \"<integer>\",\n          \"source\": \"<string>\",\n          \"created\": \"<dateTime>\"\n        },\n        \"location_id\": \"<integer>\",\n        \"type\": \"PRICE_TAG\",\n        \"updated\": \"<dateTime>\",\n        \"file_path\": \"<string>\",\n        \"mimetype\": \"<string>\",\n        \"image_thumb_path\": \"<string>\",\n        \"location_osm_id\": \"<long>\",\n        \"location_osm_type\": \"RELATION\",\n        \"date\": \"<date>\",\n        \"currency\": \"CZK\",\n        \"receipt_price_count\": \"<integer>\",\n        \"receipt_price_total\": \"<double>\",\n        \"receipt_online_delivery_costs\": \"<double>\",\n        \"ready_for_price_tag_validation\": \"<boolean>\",\n        \"price_count\": \"<integer>\",\n        \"prediction_count\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"updated\": \"<dateTime>\",\n      \"status\": 4,\n      \"model_version\": \"<string>\",\n      \"prediction_count\": \"<integer>\",\n      \"created_by\": \"<string>\",\n      \"updated_by\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "price tags create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"proof_id\": \"<integer>\",\n  \"status\": 3,\n  \"price_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/price-tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"price-tags"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"proof_id\": \"<integer>\",\n  \"status\": 3,\n  \"price_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/price-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"price-tags"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"bounding_box\": [\n    \"<double>\",\n    \"<double>\"\n  ],\n  \"proof_id\": \"<integer>\",\n  \"status\": 3,\n  \"price_id\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "prices",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "prices retrieve",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prices",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"location\": {\n    \"id\": \"<integer>\",\n    \"osm_id\": \"<long>\",\n    \"osm_type\": \"RELATION\",\n    \"type\": \"OSM\",\n    \"updated\": \"<dateTime>\",\n    \"osm_name\": \"<string>\",\n    \"osm_display_name\": \"<string>\",\n    \"osm_tag_key\": \"<string>\",\n    \"osm_tag_value\": \"<string>\",\n    \"osm_brand\": \"<string>\",\n    \"osm_address_postcode\": \"<string>\",\n    \"osm_address_city\": \"<string>\",\n    \"osm_address_country\": \"<string>\",\n    \"osm_address_country_code\": \"<string>\",\n    \"osm_lat\": \"<double>\",\n    \"osm_lon\": \"<double>\",\n    \"osm_version\": \"<integer>\",\n    \"website_url\": \"<uri>\",\n    \"price_count\": \"<integer>\",\n    \"user_count\": \"<integer>\",\n    \"product_count\": \"<integer>\",\n    \"proof_count\": \"<integer>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"location_id\": \"<integer>\",\n  \"product\": {\n    \"code\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"updated\": \"<dateTime>\",\n    \"source\": \"obf\",\n    \"source_last_synced\": \"<dateTime>\",\n    \"product_name\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"product_quantity\": \"<integer>\",\n    \"product_quantity_unit\": \"<string>\",\n    \"categories_tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"brands\": \"<string>\",\n    \"brands_tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"labels_tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nutriscore_grade\": \"<string>\",\n    \"ecoscore_grade\": \"<string>\",\n    \"nova_group\": \"<integer>\",\n    \"unique_scans_n\": \"<integer>\",\n    \"price_count\": \"<integer>\",\n    \"price_currency_count\": \"<integer>\",\n    \"location_count\": \"<integer>\",\n    \"location_type_osm_country_count\": \"<integer>\",\n    \"user_count\": \"<integer>\",\n    \"proof_count\": \"<integer>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"product_id\": \"<integer>\",\n  \"proof\": {\n    \"id\": \"<integer>\",\n    \"location_id\": \"<integer>\",\n    \"type\": \"PRICE_TAG\",\n    \"updated\": \"<dateTime>\",\n    \"file_path\": \"<string>\",\n    \"mimetype\": \"<string>\",\n    \"image_thumb_path\": \"<string>\",\n    \"location_osm_id\": \"<long>\",\n    \"location_osm_type\": \"NODE\",\n    \"date\": \"<date>\",\n    \"currency\": \"FIM\",\n    \"receipt_price_count\": \"<integer>\",\n    \"receipt_price_total\": \"<double>\",\n    \"receipt_online_delivery_costs\": \"<double>\",\n    \"ready_for_price_tag_validation\": \"<boolean>\",\n    \"price_count\": \"<integer>\",\n    \"prediction_count\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"proof_id\": \"<integer>\",\n  \"type\": \"PRODUCT\",\n  \"updated\": \"<dateTime>\",\n  \"product_code\": \"<string>\",\n  \"product_name\": \"<string>\",\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"PICK_IT_YOURSELF\",\n  \"price_per\": \"UNIT\",\n  \"currency\": \"ILR\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"RELATION\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\",\n  \"owner\": \"<string>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "prices partial update",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"SALE\",\n  \"price_per\": \"UNIT\",\n  \"currency\": \"BRR\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"SALE\",\n  \"price_per\": \"UNIT\",\n  \"currency\": \"BRR\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prices",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"SALE\",\n  \"price_per\": \"UNIT\",\n  \"currency\": \"BRR\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\"\n}"
												}
											]
										},
										{
											"name": "prices destroy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Price."
														}
													]
												}
											},
											"response": [
												{
													"name": "No response body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prices",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "stats",
									"item": [
										{
											"name": "prices stats retrieve",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices/stats?category_tag=<string>&created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&discount_type=SALE&labels_tags__contains=<string>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&origins_tags__contains=<string>&owner=<string>&price=<number>&price__gt=<number>&price__gte=<number>&price__lt=<number>&price__lte=<number>&price_is_discounted=<boolean>&product__categories_tags__contains=<string>&product_code=<string>&product_id=<integer>&product_id__isnull=<boolean>&proof_id=<integer>&proof_id__isnull=<boolean>&type=PRODUCT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices",
														"stats"
													],
													"query": [
														{
															"key": "category_tag",
															"value": "<string>"
														},
														{
															"key": "created__gte",
															"value": "<dateTime>"
														},
														{
															"key": "created__lte",
															"value": "<dateTime>"
														},
														{
															"key": "currency",
															"value": "PLZ",
															"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
														},
														{
															"key": "date",
															"value": "<date>"
														},
														{
															"key": "date__gt",
															"value": "<date>"
														},
														{
															"key": "date__gte",
															"value": "<date>"
														},
														{
															"key": "date__lt",
															"value": "<date>"
														},
														{
															"key": "date__lte",
															"value": "<date>"
														},
														{
															"key": "date__month",
															"value": "<number>"
														},
														{
															"key": "date__year",
															"value": "<number>"
														},
														{
															"key": "discount_type",
															"value": "SALE",
															"description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
														},
														{
															"key": "labels_tags__contains",
															"value": "<string>"
														},
														{
															"key": "location_id",
															"value": "<integer>"
														},
														{
															"key": "location_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "location_osm_id",
															"value": "<integer>"
														},
														{
															"key": "location_osm_type",
															"value": "NODE",
															"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "origins_tags__contains",
															"value": "<string>"
														},
														{
															"key": "owner",
															"value": "<string>"
														},
														{
															"key": "price",
															"value": "<number>"
														},
														{
															"key": "price__gt",
															"value": "<number>"
														},
														{
															"key": "price__gte",
															"value": "<number>"
														},
														{
															"key": "price__lt",
															"value": "<number>"
														},
														{
															"key": "price__lte",
															"value": "<number>"
														},
														{
															"key": "price_is_discounted",
															"value": "<boolean>"
														},
														{
															"key": "product__categories_tags__contains",
															"value": "<string>"
														},
														{
															"key": "product_code",
															"value": "<string>"
														},
														{
															"key": "product_id",
															"value": "<integer>"
														},
														{
															"key": "product_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "proof_id",
															"value": "<integer>"
														},
														{
															"key": "proof_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "type",
															"value": "PRODUCT",
															"description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prices/stats?category_tag=<string>&created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&discount_type=SALE&labels_tags__contains=<string>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&origins_tags__contains=<string>&owner=<string>&price=<number>&price__gt=<number>&price__gte=<number>&price__lt=<number>&price__lte=<number>&price_is_discounted=<boolean>&product__categories_tags__contains=<string>&product_code=<string>&product_id=<integer>&product_id__isnull=<boolean>&proof_id=<integer>&proof_id__isnull=<boolean>&type=PRODUCT",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prices",
																"stats"
															],
															"query": [
																{
																	"key": "category_tag",
																	"value": "<string>"
																},
																{
																	"key": "created__gte",
																	"value": "<dateTime>"
																},
																{
																	"key": "created__lte",
																	"value": "<dateTime>"
																},
																{
																	"key": "currency",
																	"value": "PLZ",
																	"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
																},
																{
																	"key": "date",
																	"value": "<date>"
																},
																{
																	"key": "date__gt",
																	"value": "<date>"
																},
																{
																	"key": "date__gte",
																	"value": "<date>"
																},
																{
																	"key": "date__lt",
																	"value": "<date>"
																},
																{
																	"key": "date__lte",
																	"value": "<date>"
																},
																{
																	"key": "date__month",
																	"value": "<number>"
																},
																{
																	"key": "date__year",
																	"value": "<number>"
																},
																{
																	"key": "discount_type",
																	"value": "SALE",
																	"description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
																},
																{
																	"key": "labels_tags__contains",
																	"value": "<string>"
																},
																{
																	"key": "location_id",
																	"value": "<integer>"
																},
																{
																	"key": "location_id__isnull",
																	"value": "<boolean>"
																},
																{
																	"key": "location_osm_id",
																	"value": "<integer>"
																},
																{
																	"key": "location_osm_type",
																	"value": "NODE",
																	"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
																},
																{
																	"key": "order_by",
																	"value": "<string>",
																	"description": "Which field to use when ordering the results."
																},
																{
																	"key": "origins_tags__contains",
																	"value": "<string>"
																},
																{
																	"key": "owner",
																	"value": "<string>"
																},
																{
																	"key": "price",
																	"value": "<number>"
																},
																{
																	"key": "price__gt",
																	"value": "<number>"
																},
																{
																	"key": "price__gte",
																	"value": "<number>"
																},
																{
																	"key": "price__lt",
																	"value": "<number>"
																},
																{
																	"key": "price__lte",
																	"value": "<number>"
																},
																{
																	"key": "price_is_discounted",
																	"value": "<boolean>"
																},
																{
																	"key": "product__categories_tags__contains",
																	"value": "<string>"
																},
																{
																	"key": "product_code",
																	"value": "<string>"
																},
																{
																	"key": "product_id",
																	"value": "<integer>"
																},
																{
																	"key": "product_id__isnull",
																	"value": "<boolean>"
																},
																{
																	"key": "proof_id",
																	"value": "<integer>"
																},
																{
																	"key": "proof_id__isnull",
																	"value": "<boolean>"
																},
																{
																	"key": "type",
																	"value": "PRODUCT",
																	"description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"price__avg\": \"<double>\",\n  \"price__count\": \"<integer>\",\n  \"price__max\": \"<double>\",\n  \"price__min\": \"<double>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "prices list",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/prices?category_tag=<string>&created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&discount_type=SALE&labels_tags__contains=<string>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&origins_tags__contains=<string>&owner=<string>&page=<integer>&price=<number>&price__gt=<number>&price__gte=<number>&price__lt=<number>&price__lte=<number>&price_is_discounted=<boolean>&product__categories_tags__contains=<string>&product_code=<string>&product_id=<integer>&product_id__isnull=<boolean>&proof_id=<integer>&proof_id__isnull=<boolean>&size=<integer>&type=PRODUCT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"prices"
											],
											"query": [
												{
													"key": "category_tag",
													"value": "<string>"
												},
												{
													"key": "created__gte",
													"value": "<dateTime>"
												},
												{
													"key": "created__lte",
													"value": "<dateTime>"
												},
												{
													"key": "currency",
													"value": "PLZ",
													"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
												},
												{
													"key": "date",
													"value": "<date>"
												},
												{
													"key": "date__gt",
													"value": "<date>"
												},
												{
													"key": "date__gte",
													"value": "<date>"
												},
												{
													"key": "date__lt",
													"value": "<date>"
												},
												{
													"key": "date__lte",
													"value": "<date>"
												},
												{
													"key": "date__month",
													"value": "<number>"
												},
												{
													"key": "date__year",
													"value": "<number>"
												},
												{
													"key": "discount_type",
													"value": "SALE",
													"description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
												},
												{
													"key": "labels_tags__contains",
													"value": "<string>"
												},
												{
													"key": "location_id",
													"value": "<integer>"
												},
												{
													"key": "location_id__isnull",
													"value": "<boolean>"
												},
												{
													"key": "location_osm_id",
													"value": "<integer>"
												},
												{
													"key": "location_osm_type",
													"value": "NODE",
													"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "origins_tags__contains",
													"value": "<string>"
												},
												{
													"key": "owner",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "price",
													"value": "<number>"
												},
												{
													"key": "price__gt",
													"value": "<number>"
												},
												{
													"key": "price__gte",
													"value": "<number>"
												},
												{
													"key": "price__lt",
													"value": "<number>"
												},
												{
													"key": "price__lte",
													"value": "<number>"
												},
												{
													"key": "price_is_discounted",
													"value": "<boolean>"
												},
												{
													"key": "product__categories_tags__contains",
													"value": "<string>"
												},
												{
													"key": "product_code",
													"value": "<string>"
												},
												{
													"key": "product_id",
													"value": "<integer>"
												},
												{
													"key": "product_id__isnull",
													"value": "<boolean>"
												},
												{
													"key": "proof_id",
													"value": "<integer>"
												},
												{
													"key": "proof_id__isnull",
													"value": "<boolean>"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												},
												{
													"key": "type",
													"value": "PRODUCT",
													"description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices?category_tag=<string>&created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&discount_type=SALE&labels_tags__contains=<string>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&origins_tags__contains=<string>&owner=<string>&page=<integer>&price=<number>&price__gt=<number>&price__gte=<number>&price__lt=<number>&price__lte=<number>&price_is_discounted=<boolean>&product__categories_tags__contains=<string>&product_code=<string>&product_id=<integer>&product_id__isnull=<boolean>&proof_id=<integer>&proof_id__isnull=<boolean>&size=<integer>&type=PRODUCT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices"
													],
													"query": [
														{
															"key": "category_tag",
															"value": "<string>"
														},
														{
															"key": "created__gte",
															"value": "<dateTime>"
														},
														{
															"key": "created__lte",
															"value": "<dateTime>"
														},
														{
															"key": "currency",
															"value": "PLZ",
															"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
														},
														{
															"key": "date",
															"value": "<date>"
														},
														{
															"key": "date__gt",
															"value": "<date>"
														},
														{
															"key": "date__gte",
															"value": "<date>"
														},
														{
															"key": "date__lt",
															"value": "<date>"
														},
														{
															"key": "date__lte",
															"value": "<date>"
														},
														{
															"key": "date__month",
															"value": "<number>"
														},
														{
															"key": "date__year",
															"value": "<number>"
														},
														{
															"key": "discount_type",
															"value": "SALE",
															"description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
														},
														{
															"key": "labels_tags__contains",
															"value": "<string>"
														},
														{
															"key": "location_id",
															"value": "<integer>"
														},
														{
															"key": "location_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "location_osm_id",
															"value": "<integer>"
														},
														{
															"key": "location_osm_type",
															"value": "NODE",
															"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "origins_tags__contains",
															"value": "<string>"
														},
														{
															"key": "owner",
															"value": "<string>"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "price",
															"value": "<number>"
														},
														{
															"key": "price__gt",
															"value": "<number>"
														},
														{
															"key": "price__gte",
															"value": "<number>"
														},
														{
															"key": "price__lt",
															"value": "<number>"
														},
														{
															"key": "price__lte",
															"value": "<number>"
														},
														{
															"key": "price_is_discounted",
															"value": "<boolean>"
														},
														{
															"key": "product__categories_tags__contains",
															"value": "<string>"
														},
														{
															"key": "product_code",
															"value": "<string>"
														},
														{
															"key": "product_id",
															"value": "<integer>"
														},
														{
															"key": "product_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "proof_id",
															"value": "<integer>"
														},
														{
															"key": "proof_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														},
														{
															"key": "type",
															"value": "PRODUCT",
															"description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"id\": \"<integer>\",\n      \"location\": {\n        \"id\": \"<integer>\",\n        \"osm_id\": \"<long>\",\n        \"osm_type\": \"WAY\",\n        \"type\": \"OSM\",\n        \"updated\": \"<dateTime>\",\n        \"osm_name\": \"<string>\",\n        \"osm_display_name\": \"<string>\",\n        \"osm_tag_key\": \"<string>\",\n        \"osm_tag_value\": \"<string>\",\n        \"osm_brand\": \"<string>\",\n        \"osm_address_postcode\": \"<string>\",\n        \"osm_address_city\": \"<string>\",\n        \"osm_address_country\": \"<string>\",\n        \"osm_address_country_code\": \"<string>\",\n        \"osm_lat\": \"<double>\",\n        \"osm_lon\": \"<double>\",\n        \"osm_version\": \"<integer>\",\n        \"website_url\": \"<uri>\",\n        \"price_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"product_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"location_id\": \"<integer>\",\n      \"product\": {\n        \"code\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"updated\": \"<dateTime>\",\n        \"source\": \"opff\",\n        \"source_last_synced\": \"<dateTime>\",\n        \"product_name\": \"<string>\",\n        \"image_url\": \"<string>\",\n        \"product_quantity\": \"<integer>\",\n        \"product_quantity_unit\": \"<string>\",\n        \"categories_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"brands\": \"<string>\",\n        \"brands_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"labels_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nutriscore_grade\": \"<string>\",\n        \"ecoscore_grade\": \"<string>\",\n        \"nova_group\": \"<integer>\",\n        \"unique_scans_n\": \"<integer>\",\n        \"price_count\": \"<integer>\",\n        \"price_currency_count\": \"<integer>\",\n        \"location_count\": \"<integer>\",\n        \"location_type_osm_country_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"product_id\": \"<integer>\",\n      \"proof\": {\n        \"id\": \"<integer>\",\n        \"location_id\": \"<integer>\",\n        \"type\": \"GDPR_REQUEST\",\n        \"updated\": \"<dateTime>\",\n        \"file_path\": \"<string>\",\n        \"mimetype\": \"<string>\",\n        \"image_thumb_path\": \"<string>\",\n        \"location_osm_id\": \"<long>\",\n        \"location_osm_type\": \"NODE\",\n        \"date\": \"<date>\",\n        \"currency\": \"BRC\",\n        \"receipt_price_count\": \"<integer>\",\n        \"receipt_price_total\": \"<double>\",\n        \"receipt_online_delivery_costs\": \"<double>\",\n        \"ready_for_price_tag_validation\": \"<boolean>\",\n        \"price_count\": \"<integer>\",\n        \"prediction_count\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"proof_id\": \"<integer>\",\n      \"type\": \"CATEGORY\",\n      \"updated\": \"<dateTime>\",\n      \"product_code\": \"<string>\",\n      \"product_name\": \"<string>\",\n      \"category_tag\": \"<string>\",\n      \"labels_tags\": {\n        \"nullable\": true\n      },\n      \"origins_tags\": {\n        \"nullable\": true\n      },\n      \"price\": \"<double>\",\n      \"price_is_discounted\": \"<boolean>\",\n      \"price_without_discount\": \"<double>\",\n      \"discount_type\": \"SEASONAL\",\n      \"price_per\": \"KILOGRAM\",\n      \"currency\": \"GMD\",\n      \"location_osm_id\": \"<long>\",\n      \"location_osm_type\": \"WAY\",\n      \"date\": \"<date>\",\n      \"receipt_quantity\": \"<double>\",\n      \"owner\": \"<string>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"location\": {\n        \"id\": \"<integer>\",\n        \"osm_id\": \"<long>\",\n        \"osm_type\": \"RELATION\",\n        \"type\": \"OSM\",\n        \"updated\": \"<dateTime>\",\n        \"osm_name\": \"<string>\",\n        \"osm_display_name\": \"<string>\",\n        \"osm_tag_key\": \"<string>\",\n        \"osm_tag_value\": \"<string>\",\n        \"osm_brand\": \"<string>\",\n        \"osm_address_postcode\": \"<string>\",\n        \"osm_address_city\": \"<string>\",\n        \"osm_address_country\": \"<string>\",\n        \"osm_address_country_code\": \"<string>\",\n        \"osm_lat\": \"<double>\",\n        \"osm_lon\": \"<double>\",\n        \"osm_version\": \"<integer>\",\n        \"website_url\": \"<uri>\",\n        \"price_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"product_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"location_id\": \"<integer>\",\n      \"product\": {\n        \"code\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"updated\": \"<dateTime>\",\n        \"source\": \"opff\",\n        \"source_last_synced\": \"<dateTime>\",\n        \"product_name\": \"<string>\",\n        \"image_url\": \"<string>\",\n        \"product_quantity\": \"<integer>\",\n        \"product_quantity_unit\": \"<string>\",\n        \"categories_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"brands\": \"<string>\",\n        \"brands_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"labels_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"nutriscore_grade\": \"<string>\",\n        \"ecoscore_grade\": \"<string>\",\n        \"nova_group\": \"<integer>\",\n        \"unique_scans_n\": \"<integer>\",\n        \"price_count\": \"<integer>\",\n        \"price_currency_count\": \"<integer>\",\n        \"location_count\": \"<integer>\",\n        \"location_type_osm_country_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"product_id\": \"<integer>\",\n      \"proof\": {\n        \"id\": \"<integer>\",\n        \"location_id\": \"<integer>\",\n        \"type\": \"GDPR_REQUEST\",\n        \"updated\": \"<dateTime>\",\n        \"file_path\": \"<string>\",\n        \"mimetype\": \"<string>\",\n        \"image_thumb_path\": \"<string>\",\n        \"location_osm_id\": \"<long>\",\n        \"location_osm_type\": \"NODE\",\n        \"date\": \"<date>\",\n        \"currency\": \"ZWR\",\n        \"receipt_price_count\": \"<integer>\",\n        \"receipt_price_total\": \"<double>\",\n        \"receipt_online_delivery_costs\": \"<double>\",\n        \"ready_for_price_tag_validation\": \"<boolean>\",\n        \"price_count\": \"<integer>\",\n        \"prediction_count\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"proof_id\": \"<integer>\",\n      \"type\": \"PRODUCT\",\n      \"updated\": \"<dateTime>\",\n      \"product_code\": \"<string>\",\n      \"product_name\": \"<string>\",\n      \"category_tag\": \"<string>\",\n      \"labels_tags\": {\n        \"nullable\": true\n      },\n      \"origins_tags\": {\n        \"nullable\": true\n      },\n      \"price\": \"<double>\",\n      \"price_is_discounted\": \"<boolean>\",\n      \"price_without_discount\": \"<double>\",\n      \"discount_type\": \"PICK_IT_YOURSELF\",\n      \"price_per\": \"KILOGRAM\",\n      \"currency\": \"FJD\",\n      \"location_osm_id\": \"<long>\",\n      \"location_osm_type\": \"NODE\",\n      \"date\": \"<date>\",\n      \"receipt_quantity\": \"<double>\",\n      \"owner\": \"<string>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "prices create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"proof_id\": \"<integer>\",\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"QUANTITY\",\n  \"price_per\": \"KILOGRAM\",\n  \"currency\": \"BEF\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\",\n  \"type\": \"PRODUCT\",\n  \"product_code\": \"<string>\",\n  \"product_name\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"NODE\",\n  \"location_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/prices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"prices"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"proof_id\": \"<integer>\",\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"QUANTITY\",\n  \"price_per\": \"KILOGRAM\",\n  \"currency\": \"BEF\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\",\n  \"type\": \"PRODUCT\",\n  \"product_code\": \"<string>\",\n  \"product_name\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"NODE\",\n  \"location_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/prices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prices"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"proof_id\": \"<integer>\",\n  \"category_tag\": \"<string>\",\n  \"labels_tags\": {\n    \"nullable\": true\n  },\n  \"origins_tags\": {\n    \"nullable\": true\n  },\n  \"price\": \"<double>\",\n  \"price_is_discounted\": \"<boolean>\",\n  \"price_without_discount\": \"<double>\",\n  \"discount_type\": \"QUANTITY\",\n  \"price_per\": \"KILOGRAM\",\n  \"currency\": \"BEF\",\n  \"date\": \"<date>\",\n  \"receipt_quantity\": \"<double>\",\n  \"type\": \"PRODUCT\",\n  \"product_code\": \"<string>\",\n  \"product_name\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"NODE\",\n  \"location_id\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "products",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "products retrieve",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "opsession",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Product."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "opsession",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"updated\": \"<dateTime>\",\n  \"source\": \"off_pro\",\n  \"source_last_synced\": \"<dateTime>\",\n  \"product_name\": \"<string>\",\n  \"image_url\": \"<string>\",\n  \"product_quantity\": \"<integer>\",\n  \"product_quantity_unit\": \"<string>\",\n  \"categories_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"brands\": \"<string>\",\n  \"brands_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"labels_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nutriscore_grade\": \"<string>\",\n  \"ecoscore_grade\": \"<string>\",\n  \"nova_group\": \"<integer>\",\n  \"unique_scans_n\": \"<integer>\",\n  \"price_count\": \"<integer>\",\n  \"price_currency_count\": \"<integer>\",\n  \"location_count\": \"<integer>\",\n  \"location_type_osm_country_count\": \"<integer>\",\n  \"user_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "code",
									"item": [
										{
											"name": "{code}",
											"item": [
												{
													"name": "products code retrieve",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "opsession",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/code/:code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"code",
																":code"
															],
															"variable": [
																{
																	"key": "code",
																	"value": "03",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "opsession",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/products/code/:code",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"products",
																		"code",
																		":code"
																	],
																	"variable": [
																		{
																			"key": "code"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"updated\": \"<dateTime>\",\n  \"source\": \"off_pro\",\n  \"source_last_synced\": \"<dateTime>\",\n  \"product_name\": \"<string>\",\n  \"image_url\": \"<string>\",\n  \"product_quantity\": \"<integer>\",\n  \"product_quantity_unit\": \"<string>\",\n  \"categories_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"brands\": \"<string>\",\n  \"brands_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"labels_tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nutriscore_grade\": \"<string>\",\n  \"ecoscore_grade\": \"<string>\",\n  \"nova_group\": \"<integer>\",\n  \"unique_scans_n\": \"<integer>\",\n  \"price_count\": \"<integer>\",\n  \"price_currency_count\": \"<integer>\",\n  \"location_count\": \"<integer>\",\n  \"location_type_osm_country_count\": \"<integer>\",\n  \"user_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"created\": \"<dateTime>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "products list",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "opsession",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/products?brands__like=<string>&brands_tags__contains=<string>&categories_tags__contains=<string>&code=<string>&ecoscore_grade=<string>&labels_tags__contains=<string>&nova_group=<integer>&nutriscore_grade=<string>&order_by=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&product_name__like=<string>&size=<integer>&source=opf&unique_scans_n__gte=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "brands__like",
													"value": "<string>"
												},
												{
													"key": "brands_tags__contains",
													"value": "<string>"
												},
												{
													"key": "categories_tags__contains",
													"value": "<string>"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "ecoscore_grade",
													"value": "<string>"
												},
												{
													"key": "labels_tags__contains",
													"value": "<string>"
												},
												{
													"key": "nova_group",
													"value": "<integer>"
												},
												{
													"key": "nutriscore_grade",
													"value": "<string>"
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "price_count",
													"value": "<integer>"
												},
												{
													"key": "price_count__gte",
													"value": "<integer>"
												},
												{
													"key": "price_count__lte",
													"value": "<integer>"
												},
												{
													"key": "product_name__like",
													"value": "<string>"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												},
												{
													"key": "source",
													"value": "opf",
													"description": "* `off` - off\n* `obf` - obf\n* `opff` - opff\n* `opf` - opf\n* `off_pro` - off_pro"
												},
												{
													"key": "unique_scans_n__gte",
													"value": "<integer>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "opsession",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products?brands__like=<string>&brands_tags__contains=<string>&categories_tags__contains=<string>&code=<string>&ecoscore_grade=<string>&labels_tags__contains=<string>&nova_group=<integer>&nutriscore_grade=<string>&order_by=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&product_name__like=<string>&size=<integer>&source=opf&unique_scans_n__gte=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products"
													],
													"query": [
														{
															"key": "brands__like",
															"value": "<string>"
														},
														{
															"key": "brands_tags__contains",
															"value": "<string>"
														},
														{
															"key": "categories_tags__contains",
															"value": "<string>"
														},
														{
															"key": "code",
															"value": "<string>"
														},
														{
															"key": "ecoscore_grade",
															"value": "<string>"
														},
														{
															"key": "labels_tags__contains",
															"value": "<string>"
														},
														{
															"key": "nova_group",
															"value": "<integer>"
														},
														{
															"key": "nutriscore_grade",
															"value": "<string>"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "price_count",
															"value": "<integer>"
														},
														{
															"key": "price_count__gte",
															"value": "<integer>"
														},
														{
															"key": "price_count__lte",
															"value": "<integer>"
														},
														{
															"key": "product_name__like",
															"value": "<string>"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														},
														{
															"key": "source",
															"value": "opf",
															"description": "* `off` - off\n* `obf` - obf\n* `opff` - opff\n* `opf` - opf\n* `off_pro` - off_pro"
														},
														{
															"key": "unique_scans_n__gte",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"code\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"updated\": \"<dateTime>\",\n      \"source\": \"opf\",\n      \"source_last_synced\": \"<dateTime>\",\n      \"product_name\": \"<string>\",\n      \"image_url\": \"<string>\",\n      \"product_quantity\": \"<integer>\",\n      \"product_quantity_unit\": \"<string>\",\n      \"categories_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"brands\": \"<string>\",\n      \"brands_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"labels_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nutriscore_grade\": \"<string>\",\n      \"ecoscore_grade\": \"<string>\",\n      \"nova_group\": \"<integer>\",\n      \"unique_scans_n\": \"<integer>\",\n      \"price_count\": \"<integer>\",\n      \"price_currency_count\": \"<integer>\",\n      \"location_count\": \"<integer>\",\n      \"location_type_osm_country_count\": \"<integer>\",\n      \"user_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"created\": \"<dateTime>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"updated\": \"<dateTime>\",\n      \"source\": \"opff\",\n      \"source_last_synced\": \"<dateTime>\",\n      \"product_name\": \"<string>\",\n      \"image_url\": \"<string>\",\n      \"product_quantity\": \"<integer>\",\n      \"product_quantity_unit\": \"<string>\",\n      \"categories_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"brands\": \"<string>\",\n      \"brands_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"labels_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nutriscore_grade\": \"<string>\",\n      \"ecoscore_grade\": \"<string>\",\n      \"nova_group\": \"<integer>\",\n      \"unique_scans_n\": \"<integer>\",\n      \"price_count\": \"<integer>\",\n      \"price_currency_count\": \"<integer>\",\n      \"location_count\": \"<integer>\",\n      \"location_type_osm_country_count\": \"<integer>\",\n      \"user_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"created\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "proofs",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "proofs retrieve",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Proof."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/proofs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"proofs",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"location\": {\n    \"id\": \"<integer>\",\n    \"osm_id\": \"<long>\",\n    \"osm_type\": \"RELATION\",\n    \"type\": \"OSM\",\n    \"updated\": \"<dateTime>\",\n    \"osm_name\": \"<string>\",\n    \"osm_display_name\": \"<string>\",\n    \"osm_tag_key\": \"<string>\",\n    \"osm_tag_value\": \"<string>\",\n    \"osm_brand\": \"<string>\",\n    \"osm_address_postcode\": \"<string>\",\n    \"osm_address_city\": \"<string>\",\n    \"osm_address_country\": \"<string>\",\n    \"osm_address_country_code\": \"<string>\",\n    \"osm_lat\": \"<double>\",\n    \"osm_lon\": \"<double>\",\n    \"osm_version\": \"<integer>\",\n    \"website_url\": \"<uri>\",\n    \"price_count\": \"<integer>\",\n    \"user_count\": \"<integer>\",\n    \"product_count\": \"<integer>\",\n    \"proof_count\": \"<integer>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"location_id\": \"<integer>\",\n  \"predictions\": [\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"OBJECT_DETECTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    },\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"RECEIPT_EXTRACTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    }\n  ],\n  \"type\": \"GDPR_REQUEST\",\n  \"updated\": \"<dateTime>\",\n  \"file_path\": \"<string>\",\n  \"mimetype\": \"<string>\",\n  \"image_thumb_path\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"WAY\",\n  \"date\": \"<date>\",\n  \"currency\": \"ISK\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"receipt_online_delivery_costs\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\",\n  \"price_count\": \"<integer>\",\n  \"prediction_count\": \"<integer>\",\n  \"owner\": \"<string>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "proofs partial update",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"RELATION\",\n  \"type\": \"GDPR_REQUEST\",\n  \"currency\": \"MDC\",\n  \"date\": \"<date>\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Proof."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"RELATION\",\n  \"type\": \"GDPR_REQUEST\",\n  \"currency\": \"MDC\",\n  \"date\": \"<date>\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/proofs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"proofs",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"RECEIPT\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"RELATION\",\n  \"currency\": \"JMD\",\n  \"date\": \"<date>\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "proofs destroy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) A unique integer value identifying this Proof."
														}
													]
												}
											},
											"response": [
												{
													"name": "No response body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/proofs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"proofs",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "process-with-gemini",
									"item": [
										{
											"name": "proofs process with gemini create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "files",
															"value": "<string>,<string>",
															"description": "(Required) ",
															"type": "text"
														},
														{
															"key": "mode",
															"value": "<string>",
															"description": "(Required) ",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs/process-with-gemini",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs",
														"process-with-gemini"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "files",
																	"value": "<string>,<string>",
																	"description": "(Required) ",
																	"type": "text"
																},
																{
																	"key": "mode",
																	"value": "<string>",
																	"description": "(Required) ",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/proofs/process-with-gemini",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"proofs",
																"process-with-gemini"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"location\": {\n    \"id\": \"<integer>\",\n    \"osm_id\": \"<long>\",\n    \"osm_type\": \"RELATION\",\n    \"type\": \"OSM\",\n    \"updated\": \"<dateTime>\",\n    \"osm_name\": \"<string>\",\n    \"osm_display_name\": \"<string>\",\n    \"osm_tag_key\": \"<string>\",\n    \"osm_tag_value\": \"<string>\",\n    \"osm_brand\": \"<string>\",\n    \"osm_address_postcode\": \"<string>\",\n    \"osm_address_city\": \"<string>\",\n    \"osm_address_country\": \"<string>\",\n    \"osm_address_country_code\": \"<string>\",\n    \"osm_lat\": \"<double>\",\n    \"osm_lon\": \"<double>\",\n    \"osm_version\": \"<integer>\",\n    \"website_url\": \"<uri>\",\n    \"price_count\": \"<integer>\",\n    \"user_count\": \"<integer>\",\n    \"product_count\": \"<integer>\",\n    \"proof_count\": \"<integer>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"location_id\": \"<integer>\",\n  \"predictions\": [\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"OBJECT_DETECTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    },\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"RECEIPT_EXTRACTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    }\n  ],\n  \"type\": \"GDPR_REQUEST\",\n  \"updated\": \"<dateTime>\",\n  \"file_path\": \"<string>\",\n  \"mimetype\": \"<string>\",\n  \"image_thumb_path\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"WAY\",\n  \"date\": \"<date>\",\n  \"currency\": \"ISK\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"receipt_online_delivery_costs\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\",\n  \"price_count\": \"<integer>\",\n  \"prediction_count\": \"<integer>\",\n  \"owner\": \"<string>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "upload",
									"item": [
										{
											"name": "proofs upload create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "(Required) ",
															"type": "text"
														},
														{
															"key": "type",
															"value": "PRICE_TAG",
															"description": "(Required) * `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT (This can only be one of PRICE_TAG,RECEIPT,GDPR_REQUEST,SHOP_IMPORT)",
															"type": "text"
														},
														{
															"key": "location_osm_id",
															"value": "<long>",
															"type": "text"
														},
														{
															"key": "location_osm_type",
															"value": "RELATION",
															"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION (This can only be one of NODE,WAY,RELATION)",
															"type": "text"
														},
														{
															"key": "currency",
															"value": "XBB",
															"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR (This can only be one of ADP,AED,AFA,AFN,ALK,ALL,AMD,ANG,AOA,AOK,AON,AOR,ARA,ARL,ARM,ARP,ARS,ATS,AUD,AWG,AZM,AZN,BAD,BAM,BAN,BBD,BDT,BEC,BEF,BEL,BGL,BGM,BGN,BGO,BHD,BIF,BMD,BND,BOB,BOL,BOP,BOV,BRB,BRC,BRE,BRL,BRN,BRR,BRZ,BSD,BTN,BUK,BWP,BYB,BYN,BYR,BZD,CAD,CDF,CHE,CHF,CHW,CLE,CLF,CLP,CNH,CNX,CNY,COP,COU,CRC,CSD,CSK,CUC,CUP,CVE,CYP,CZK,DDM,DEM,DJF,DKK,DOP,DZD,ECS,ECV,EEK,EGP,ERN,ESA,ESB,ESP,ETB,EUR,FIM,FJD,FKP,FRF,GBP,GEK,GEL,GHC,GHS,GIP,GMD,GNF,GNS,GQE,GRD,GTQ,GWE,GWP,GYD,HKD,HNL,HRD,HRK,HTG,HUF,IDR,IEP,ILP,ILR,ILS,INR,IQD,IRR,ISJ,ISK,ITL,JMD,JOD,JPY,KES,KGS,KHR,KMF,KPW,KRH,KRO,KRW,KWD,KYD,KZT,LAK,LBP,LKR,LRD,LSL,LTL,LTT,LUC,LUF,LUL,LVL,LVR,LYD,MAD,MAF,MCF,MDC,MDL,MGA,MGF,MKD,MKN,MLF,MMK,MNT,MOP,MRO,MRU,MTL,MTP,MUR,MVP,MVR,MWK,MXN,MXP,MXV,MYR,MZE,MZM,MZN,NAD,NGN,NIC,NIO,NLG,NOK,NPR,NZD,OMR,PAB,PEI,PEN,PES,PGK,PHP,PKR,PLN,PLZ,PTE,PYG,QAR,RHD,ROL,RON,RSD,RUB,RUR,RWF,SAR,SBD,SCR,SDD,SDG,SDP,SEK,SGD,SHP,SIT,SKK,SLE,SLL,SOS,SRD,SRG,SSP,STD,STN,SUR,SVC,SYP,SZL,THB,TJR,TJS,TMM,TMT,TND,TOP,TPE,TRL,TRY,TTD,TWD,TZS,UAH,UAK,UGS,UGX,USD,USN,USS,UYI,UYP,UYU,UYW,UZS,VEB,VED,VEF,VES,VND,VNN,VUV,WST,XAF,XAG,XAU,XBA,XBB,XBC,XBD,XCD,XDR,XEU,XFO,XFU,XOF,XPD,XPF,XPT,XRE,XSU,XTS,XUA,XXX,YDD,YER,YUD,YUM,YUN,YUR,ZAL,ZAR,ZMK,ZMW,ZRN,ZRZ,ZWD,ZWL,ZWR)",
															"type": "text"
														},
														{
															"key": "date",
															"value": "<date>",
															"type": "text"
														},
														{
															"key": "receipt_price_count",
															"value": "<integer>",
															"type": "text"
														},
														{
															"key": "receipt_price_total",
															"value": "<double>",
															"type": "text"
														},
														{
															"key": "ready_for_price_tag_validation",
															"value": "<boolean>",
															"type": "text"
														},
														{
															"key": "location_id",
															"value": "<integer>",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs",
														"upload"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) ",
																	"type": "text"
																},
																{
																	"key": "type",
																	"value": "PRICE_TAG",
																	"description": "(Required) * `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT (This can only be one of PRICE_TAG,RECEIPT,GDPR_REQUEST,SHOP_IMPORT)",
																	"type": "text"
																},
																{
																	"key": "location_osm_id",
																	"value": "<long>",
																	"type": "text"
																},
																{
																	"key": "location_osm_type",
																	"value": "RELATION",
																	"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION (This can only be one of NODE,WAY,RELATION)",
																	"type": "text"
																},
																{
																	"key": "currency",
																	"value": "XBB",
																	"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR (This can only be one of ADP,AED,AFA,AFN,ALK,ALL,AMD,ANG,AOA,AOK,AON,AOR,ARA,ARL,ARM,ARP,ARS,ATS,AUD,AWG,AZM,AZN,BAD,BAM,BAN,BBD,BDT,BEC,BEF,BEL,BGL,BGM,BGN,BGO,BHD,BIF,BMD,BND,BOB,BOL,BOP,BOV,BRB,BRC,BRE,BRL,BRN,BRR,BRZ,BSD,BTN,BUK,BWP,BYB,BYN,BYR,BZD,CAD,CDF,CHE,CHF,CHW,CLE,CLF,CLP,CNH,CNX,CNY,COP,COU,CRC,CSD,CSK,CUC,CUP,CVE,CYP,CZK,DDM,DEM,DJF,DKK,DOP,DZD,ECS,ECV,EEK,EGP,ERN,ESA,ESB,ESP,ETB,EUR,FIM,FJD,FKP,FRF,GBP,GEK,GEL,GHC,GHS,GIP,GMD,GNF,GNS,GQE,GRD,GTQ,GWE,GWP,GYD,HKD,HNL,HRD,HRK,HTG,HUF,IDR,IEP,ILP,ILR,ILS,INR,IQD,IRR,ISJ,ISK,ITL,JMD,JOD,JPY,KES,KGS,KHR,KMF,KPW,KRH,KRO,KRW,KWD,KYD,KZT,LAK,LBP,LKR,LRD,LSL,LTL,LTT,LUC,LUF,LUL,LVL,LVR,LYD,MAD,MAF,MCF,MDC,MDL,MGA,MGF,MKD,MKN,MLF,MMK,MNT,MOP,MRO,MRU,MTL,MTP,MUR,MVP,MVR,MWK,MXN,MXP,MXV,MYR,MZE,MZM,MZN,NAD,NGN,NIC,NIO,NLG,NOK,NPR,NZD,OMR,PAB,PEI,PEN,PES,PGK,PHP,PKR,PLN,PLZ,PTE,PYG,QAR,RHD,ROL,RON,RSD,RUB,RUR,RWF,SAR,SBD,SCR,SDD,SDG,SDP,SEK,SGD,SHP,SIT,SKK,SLE,SLL,SOS,SRD,SRG,SSP,STD,STN,SUR,SVC,SYP,SZL,THB,TJR,TJS,TMM,TMT,TND,TOP,TPE,TRL,TRY,TTD,TWD,TZS,UAH,UAK,UGS,UGX,USD,USN,USS,UYI,UYP,UYU,UYW,UZS,VEB,VED,VEF,VES,VND,VNN,VUV,WST,XAF,XAG,XAU,XBA,XBB,XBC,XBD,XCD,XDR,XEU,XFO,XFU,XOF,XPD,XPF,XPT,XRE,XSU,XTS,XUA,XXX,YDD,YER,YUD,YUM,YUN,YUR,ZAL,ZAR,ZMK,ZMW,ZRN,ZRZ,ZWD,ZWL,ZWR)",
																	"type": "text"
																},
																{
																	"key": "date",
																	"value": "<date>",
																	"type": "text"
																},
																{
																	"key": "receipt_price_count",
																	"value": "<integer>",
																	"type": "text"
																},
																{
																	"key": "receipt_price_total",
																	"value": "<double>",
																	"type": "text"
																},
																{
																	"key": "ready_for_price_tag_validation",
																	"value": "<boolean>",
																	"type": "text"
																},
																{
																	"key": "location_id",
																	"value": "<integer>",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/proofs/upload",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"proofs",
																"upload"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"location\": {\n    \"id\": \"<integer>\",\n    \"osm_id\": \"<long>\",\n    \"osm_type\": \"WAY\",\n    \"type\": \"ONLINE\",\n    \"updated\": \"<dateTime>\",\n    \"osm_name\": \"<string>\",\n    \"osm_display_name\": \"<string>\",\n    \"osm_tag_key\": \"<string>\",\n    \"osm_tag_value\": \"<string>\",\n    \"osm_brand\": \"<string>\",\n    \"osm_address_postcode\": \"<string>\",\n    \"osm_address_city\": \"<string>\",\n    \"osm_address_country\": \"<string>\",\n    \"osm_address_country_code\": \"<string>\",\n    \"osm_lat\": \"<double>\",\n    \"osm_lon\": \"<double>\",\n    \"osm_version\": \"<integer>\",\n    \"website_url\": \"<uri>\",\n    \"price_count\": \"<integer>\",\n    \"user_count\": \"<integer>\",\n    \"product_count\": \"<integer>\",\n    \"proof_count\": \"<integer>\",\n    \"source\": \"<string>\",\n    \"created\": \"<dateTime>\"\n  },\n  \"location_id\": \"<integer>\",\n  \"predictions\": [\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"CLASSIFICATION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    },\n    {\n      \"model_name\": \"<string>\",\n      \"model_version\": \"<string>\",\n      \"type\": \"RECEIPT_EXTRACTION\",\n      \"created\": \"<dateTime>\",\n      \"data\": {\n        \"nullable\": true,\n        \"title\": \"A dict representing the data of the prediction. This field is model-specific.\"\n      },\n      \"value\": \"<string>\",\n      \"max_confidence\": \"<double>\"\n    }\n  ],\n  \"type\": \"RECEIPT\",\n  \"updated\": \"<dateTime>\",\n  \"file_path\": \"<string>\",\n  \"mimetype\": \"<string>\",\n  \"image_thumb_path\": \"<string>\",\n  \"location_osm_id\": \"<long>\",\n  \"location_osm_type\": \"WAY\",\n  \"date\": \"<date>\",\n  \"currency\": \"OMR\",\n  \"receipt_price_count\": \"<integer>\",\n  \"receipt_price_total\": \"<double>\",\n  \"receipt_online_delivery_costs\": \"<double>\",\n  \"ready_for_price_tag_validation\": \"<boolean>\",\n  \"price_count\": \"<integer>\",\n  \"prediction_count\": \"<integer>\",\n  \"owner\": \"<string>\",\n  \"source\": \"<string>\",\n  \"created\": \"<dateTime>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "proofs list",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/proofs?created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&owner=<string>&page=<integer>&prediction_count=<integer>&prediction_count__gte=<integer>&prediction_count__lte=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&ready_for_price_tag_validation=<boolean>&size=<integer>&type=GDPR_REQUEST",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"proofs"
											],
											"query": [
												{
													"key": "created__gte",
													"value": "<dateTime>"
												},
												{
													"key": "created__lte",
													"value": "<dateTime>"
												},
												{
													"key": "currency",
													"value": "PLZ",
													"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
												},
												{
													"key": "date",
													"value": "<date>"
												},
												{
													"key": "date__gt",
													"value": "<date>"
												},
												{
													"key": "date__gte",
													"value": "<date>"
												},
												{
													"key": "date__lt",
													"value": "<date>"
												},
												{
													"key": "date__lte",
													"value": "<date>"
												},
												{
													"key": "date__month",
													"value": "<number>"
												},
												{
													"key": "date__year",
													"value": "<number>"
												},
												{
													"key": "location_id",
													"value": "<integer>"
												},
												{
													"key": "location_id__isnull",
													"value": "<boolean>"
												},
												{
													"key": "location_osm_id",
													"value": "<integer>"
												},
												{
													"key": "location_osm_type",
													"value": "NODE",
													"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "owner",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "prediction_count",
													"value": "<integer>"
												},
												{
													"key": "prediction_count__gte",
													"value": "<integer>"
												},
												{
													"key": "prediction_count__lte",
													"value": "<integer>"
												},
												{
													"key": "price_count",
													"value": "<integer>"
												},
												{
													"key": "price_count__gte",
													"value": "<integer>"
												},
												{
													"key": "price_count__lte",
													"value": "<integer>"
												},
												{
													"key": "ready_for_price_tag_validation",
													"value": "<boolean>"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												},
												{
													"key": "type",
													"value": "GDPR_REQUEST",
													"description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/proofs?created__gte=<dateTime>&created__lte=<dateTime>&currency=PLZ&date=<date>&date__gt=<date>&date__gte=<date>&date__lt=<date>&date__lte=<date>&date__month=<number>&date__year=<number>&location_id=<integer>&location_id__isnull=<boolean>&location_osm_id=<integer>&location_osm_type=NODE&order_by=<string>&owner=<string>&page=<integer>&prediction_count=<integer>&prediction_count__gte=<integer>&prediction_count__lte=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&ready_for_price_tag_validation=<boolean>&size=<integer>&type=GDPR_REQUEST",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"proofs"
													],
													"query": [
														{
															"key": "created__gte",
															"value": "<dateTime>"
														},
														{
															"key": "created__lte",
															"value": "<dateTime>"
														},
														{
															"key": "currency",
															"value": "PLZ",
															"description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
														},
														{
															"key": "date",
															"value": "<date>"
														},
														{
															"key": "date__gt",
															"value": "<date>"
														},
														{
															"key": "date__gte",
															"value": "<date>"
														},
														{
															"key": "date__lt",
															"value": "<date>"
														},
														{
															"key": "date__lte",
															"value": "<date>"
														},
														{
															"key": "date__month",
															"value": "<number>"
														},
														{
															"key": "date__year",
															"value": "<number>"
														},
														{
															"key": "location_id",
															"value": "<integer>"
														},
														{
															"key": "location_id__isnull",
															"value": "<boolean>"
														},
														{
															"key": "location_osm_id",
															"value": "<integer>"
														},
														{
															"key": "location_osm_type",
															"value": "NODE",
															"description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "owner",
															"value": "<string>"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "prediction_count",
															"value": "<integer>"
														},
														{
															"key": "prediction_count__gte",
															"value": "<integer>"
														},
														{
															"key": "prediction_count__lte",
															"value": "<integer>"
														},
														{
															"key": "price_count",
															"value": "<integer>"
														},
														{
															"key": "price_count__gte",
															"value": "<integer>"
														},
														{
															"key": "price_count__lte",
															"value": "<integer>"
														},
														{
															"key": "ready_for_price_tag_validation",
															"value": "<boolean>"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														},
														{
															"key": "type",
															"value": "GDPR_REQUEST",
															"description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"id\": \"<integer>\",\n      \"location\": {\n        \"id\": \"<integer>\",\n        \"osm_id\": \"<long>\",\n        \"osm_type\": \"NODE\",\n        \"type\": \"OSM\",\n        \"updated\": \"<dateTime>\",\n        \"osm_name\": \"<string>\",\n        \"osm_display_name\": \"<string>\",\n        \"osm_tag_key\": \"<string>\",\n        \"osm_tag_value\": \"<string>\",\n        \"osm_brand\": \"<string>\",\n        \"osm_address_postcode\": \"<string>\",\n        \"osm_address_city\": \"<string>\",\n        \"osm_address_country\": \"<string>\",\n        \"osm_address_country_code\": \"<string>\",\n        \"osm_lat\": \"<double>\",\n        \"osm_lon\": \"<double>\",\n        \"osm_version\": \"<integer>\",\n        \"website_url\": \"<uri>\",\n        \"price_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"product_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"location_id\": \"<integer>\",\n      \"type\": \"RECEIPT\",\n      \"updated\": \"<dateTime>\",\n      \"file_path\": \"<string>\",\n      \"mimetype\": \"<string>\",\n      \"image_thumb_path\": \"<string>\",\n      \"location_osm_id\": \"<long>\",\n      \"location_osm_type\": \"NODE\",\n      \"date\": \"<date>\",\n      \"currency\": \"IRR\",\n      \"receipt_price_count\": \"<integer>\",\n      \"receipt_price_total\": \"<double>\",\n      \"receipt_online_delivery_costs\": \"<double>\",\n      \"ready_for_price_tag_validation\": \"<boolean>\",\n      \"price_count\": \"<integer>\",\n      \"prediction_count\": \"<integer>\",\n      \"owner\": \"<string>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"location\": {\n        \"id\": \"<integer>\",\n        \"osm_id\": \"<long>\",\n        \"osm_type\": \"RELATION\",\n        \"type\": \"OSM\",\n        \"updated\": \"<dateTime>\",\n        \"osm_name\": \"<string>\",\n        \"osm_display_name\": \"<string>\",\n        \"osm_tag_key\": \"<string>\",\n        \"osm_tag_value\": \"<string>\",\n        \"osm_brand\": \"<string>\",\n        \"osm_address_postcode\": \"<string>\",\n        \"osm_address_city\": \"<string>\",\n        \"osm_address_country\": \"<string>\",\n        \"osm_address_country_code\": \"<string>\",\n        \"osm_lat\": \"<double>\",\n        \"osm_lon\": \"<double>\",\n        \"osm_version\": \"<integer>\",\n        \"website_url\": \"<uri>\",\n        \"price_count\": \"<integer>\",\n        \"user_count\": \"<integer>\",\n        \"product_count\": \"<integer>\",\n        \"proof_count\": \"<integer>\",\n        \"source\": \"<string>\",\n        \"created\": \"<dateTime>\"\n      },\n      \"location_id\": \"<integer>\",\n      \"type\": \"SHOP_IMPORT\",\n      \"updated\": \"<dateTime>\",\n      \"file_path\": \"<string>\",\n      \"mimetype\": \"<string>\",\n      \"image_thumb_path\": \"<string>\",\n      \"location_osm_id\": \"<long>\",\n      \"location_osm_type\": \"RELATION\",\n      \"date\": \"<date>\",\n      \"currency\": \"IEP\",\n      \"receipt_price_count\": \"<integer>\",\n      \"receipt_price_total\": \"<double>\",\n      \"receipt_online_delivery_costs\": \"<double>\",\n      \"ready_for_price_tag_validation\": \"<boolean>\",\n      \"price_count\": \"<integer>\",\n      \"prediction_count\": \"<integer>\",\n      \"owner\": \"<string>\",\n      \"source\": \"<string>\",\n      \"created\": \"<dateTime>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "session",
							"item": [
								{
									"name": "session retrieve",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"session"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/session",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"session"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<string>\",\n  \"last_used\": \"<string>\",\n  \"token\": \"<string>\",\n  \"user_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "session destroy",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"session"
											]
										}
									},
									"response": [
										{
											"name": "No response body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/session",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"session"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "stats",
							"item": [
								{
									"name": "stats retrieve",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"stats"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"stats"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"updated\": \"<dateTime>\",\n  \"price_count\": \"<integer>\",\n  \"price_type_product_code_count\": \"<integer>\",\n  \"price_type_category_tag_count\": \"<integer>\",\n  \"price_with_discount_count\": \"<integer>\",\n  \"price_currency_count\": \"<integer>\",\n  \"price_type_group_community_count\": \"<integer>\",\n  \"price_type_group_consumption_count\": \"<integer>\",\n  \"price_source_web_count\": \"<integer>\",\n  \"price_source_mobile_count\": \"<integer>\",\n  \"price_source_api_count\": \"<integer>\",\n  \"price_source_other_count\": \"<integer>\",\n  \"product_count\": \"<integer>\",\n  \"product_source_off_count\": \"<integer>\",\n  \"product_source_obf_count\": \"<integer>\",\n  \"product_source_opff_count\": \"<integer>\",\n  \"product_source_opf_count\": \"<integer>\",\n  \"product_with_price_count\": \"<integer>\",\n  \"product_source_off_with_price_count\": \"<integer>\",\n  \"product_source_obf_with_price_count\": \"<integer>\",\n  \"product_source_opff_with_price_count\": \"<integer>\",\n  \"product_source_opf_with_price_count\": \"<integer>\",\n  \"location_count\": \"<integer>\",\n  \"location_with_price_count\": \"<integer>\",\n  \"location_type_osm_count\": \"<integer>\",\n  \"location_type_online_count\": \"<integer>\",\n  \"location_type_osm_country_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"proof_with_price_count\": \"<integer>\",\n  \"proof_type_price_tag_count\": \"<integer>\",\n  \"proof_type_receipt_count\": \"<integer>\",\n  \"proof_type_gdpr_request_count\": \"<integer>\",\n  \"proof_type_shop_import_count\": \"<integer>\",\n  \"proof_type_group_community_count\": \"<integer>\",\n  \"proof_type_group_consumption_count\": \"<integer>\",\n  \"proof_source_web_count\": \"<integer>\",\n  \"proof_source_mobile_count\": \"<integer>\",\n  \"proof_source_api_count\": \"<integer>\",\n  \"proof_source_other_count\": \"<integer>\",\n  \"price_tag_count\": \"<integer>\",\n  \"price_tag_status_unknown_count\": \"<integer>\",\n  \"price_tag_status_linked_to_price_count\": \"<integer>\",\n  \"user_count\": \"<integer>\",\n  \"user_with_price_count\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "status retrieve",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{user_id}",
									"item": [
										{
											"name": "users retrieve",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "opsession",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) A unique value identifying this User."
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "opsession",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user_id\": \"<string>\",\n  \"price_count\": \"<integer>\",\n  \"price_type_group_community_count\": \"<integer>\",\n  \"price_type_group_consumption_count\": \"<integer>\",\n  \"price_currency_count\": \"<integer>\",\n  \"proof_count\": \"<integer>\",\n  \"proof_type_group_community_count\": \"<integer>\",\n  \"proof_type_group_consumption_count\": \"<integer>\",\n  \"location_count\": \"<integer>\",\n  \"location_type_osm_country_count\": \"<integer>\",\n  \"product_count\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "users list",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "opsession",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/users?order_by=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Which field to use when ordering the results."
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "A page number within the paginated result set."
												},
												{
													"key": "price_count",
													"value": "<integer>"
												},
												{
													"key": "price_count__gte",
													"value": "<integer>"
												},
												{
													"key": "price_count__lte",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "Number of results to return per page."
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "opsession",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/users?order_by=<string>&page=<integer>&price_count=<integer>&price_count__gte=<integer>&price_count__lte=<integer>&size=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users"
													],
													"query": [
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Which field to use when ordering the results."
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "A page number within the paginated result set."
														},
														{
															"key": "price_count",
															"value": "<integer>"
														},
														{
															"key": "price_count__gte",
															"value": "<integer>"
														},
														{
															"key": "price_count__lte",
															"value": "<integer>"
														},
														{
															"key": "size",
															"value": "<integer>",
															"description": "Number of results to return per page."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"results\": [\n    {\n      \"user_id\": \"<string>\",\n      \"price_count\": \"<integer>\",\n      \"price_type_group_community_count\": \"<integer>\",\n      \"price_type_group_consumption_count\": \"<integer>\",\n      \"price_currency_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"proof_type_group_community_count\": \"<integer>\",\n      \"proof_type_group_consumption_count\": \"<integer>\",\n      \"location_count\": \"<integer>\",\n      \"location_type_osm_country_count\": \"<integer>\",\n      \"product_count\": \"<integer>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"price_count\": \"<integer>\",\n      \"price_type_group_community_count\": \"<integer>\",\n      \"price_type_group_consumption_count\": \"<integer>\",\n      \"price_currency_count\": \"<integer>\",\n      \"proof_count\": \"<integer>\",\n      \"proof_type_group_community_count\": \"<integer>\",\n      \"proof_type_group_consumption_count\": \"<integer>\",\n      \"location_count\": \"<integer>\",\n      \"location_type_osm_country_count\": \"<integer>\",\n      \"product_count\": \"<integer>\"\n    }\n  ],\n  \"next\": \"<uri>\",\n  \"previous\": \"<uri>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}